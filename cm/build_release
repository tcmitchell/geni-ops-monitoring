#!/bin/sh
#----------------------------------------------------------------------
# Copyright (c) 2014 Raytheon BBN Technologies
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and/or hardware specification (the "Work") to
# deal in the Work without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Work, and to permit persons to whom the Work
# is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Work.
#
# THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
# IN THE WORK.
#----------------------------------------------------------------------

# This script creates a release tarball in the release directory
# using the tagged version of the code.

# If any command fails (returns non-0 status), exit immediately.
set -e

if [ $# -lt 1 ] ; then
    echo "Usage: $0 release-tag-name"
    echo "use HEAD to build a release from the checked out version"
    exit 1    
fi

RELEASE_TAG=$1


# Make sure we're at the top of the working dir because
# "git archive" only looks at the current dir and below.
cd "$(git rev-parse --show-toplevel)"

TARBALL="$(pwd)/release/ops-monitoring.${RELEASE_TAG}.tar.gz"
echo "Creating tarball ${TARBALL}"


if [ -d release ]; then
    rm -rf release
fi
mkdir release
git archive --format=tar --prefix ops-monitoring/ ${RELEASE_TAG} | (cd release && tar xvf -)
cd release/ops-monitoring 
make
cd ..
tar cvzf ${TARBALL} ops-monitoring --exclude='ops-monitoring/.gitignore' --exclude='ops-monitoring/alerting' \
    --exclude='GNUmakefile' --exclude='ops-monitoring/root.mk' --exclude='ops-monitoring/cm' \
    --exclude='ops-monitoring/doc' --exclude='ops-monitoring/schema/update_schemas.sh' --exclude='ops-monitoring/test' \
    --exclude='ops-monitoring/local/coordinate_mesoscale_experiments.py' --exclude='ops-monitoring/local/extck_populator.py' \
    --exclude='ops-monitoring/local/extck_store.py' --exclude='ops-monitoring/local/unit-tests/ips.conf' \
    --exclude='ops-monitoring/local/unit-tests/pinger.py'
ls -l ${TARBALL}
