Reference Local Datastore README

1. Aptitude packages

    (1) sudo apt-get install postgresql
    (2) sudo apt-get install python-psycopg2 python-requests 	

    For the Python-Flask webserver:
    (3) sudo apt-get install python-flask

    For the Apache webserver with WSGI:
    (4) sudo apt-get install apache2 libapache2-mod-wsgi


2. PostgreSQL Configuration

   We use <LOCAL_OPERATOR_NAME>=localstore, but any name you like
   should work.

    Omit (1) if you already have a postgres user
    (1) sudo -u postgres psql -c '\password postgres' postgres
    (2) sudo -u postgres createuser --superuser <LOCAL_OPERATOR_NAME>
    (3) sudo -u postgres psql -c '\password <LOCAL_OPERATOR_NAME>' postgres
    (4) sudo -u postgres createdb local

3. PSutil Install and Configuration (necessary for the unit-test)

    (1) sudo apt-get install python-dev python-pip 
    (2) sudo pip install psutil 
    (3) If psutil was installed through apt-get install 
        python-psutil, upgrade it through pip
        sudo pip install psutil --upgrade

4. Install and configure ops-monitoring software

   This puts the software in /usr/local/ops-monitoring.  You can put it
   elsewhere, but may need to change other configuration down the line
   to point to the correct paths.

    (1) cd /usr/local
    (2) sudo tar xvjf /path/to/ops-monitoring.tar.bz2
    (3) sudo $EDITOR ops-monitoring/config/local_datastore_operator.conf
        * set username: <LOCAL_OPERATOR_NAME>
        * set password: <psql password for <LOCAL_OPERATOR_NAME> you set above>

5. Apache WSGI and Flask Configuration

   The reference configuration customizes apache to make the reference
   datastore available via flask

    (1) Add text to an appropriate VirtualHost directive in your apache
        configuration (e.g. for a stock Ubuntu apache install, you can
        put this inside the <VirtualHost *:80> block of
          /etc/apache2/sites-available/default
        If you want the pages served at a root other than /, modify the
        WSGIScriptAlias directive:

  WSGIDaemonProcess localstore threads=5
  WSGIScriptAlias / /usr/local/ops-monitoring/local/wsgi/localstore.wsgi

  <Directory /usr/local/ops-monitoring/local/wsgi>
    WSGIProcessGroup localstore
    WSGIApplicationGroup %{GLOBAL}
    Order deny,allow
    Allow from all
  </Directory>

    (2) In order to see WSGI errors if any occur, modify that same
        VirtualHost block and set:
  LogLevel info

6. Datastore database cleanup and initialization 

   Populate your database either with the schema tables only, or with
   the tables and some sample data if you want to see the localstore
   work before adding your own data.

    (1) cd /usr/local/ops-monitoring/local/unit-test
    (2) IF you want the tables only, run:
          python ./local_table_reset.py
    (3) OR IF you want tables and data, run:
    	  python ./local_restart_node_interface_stats.py 
        This populates the tables with simulated configuration
        information.  It then runs a series of inserts for putting node
        and interface data that take a few seconds to complete.
    (4) Open PostgreSQL to look at the data and tables
        (a) psql -U <LOCAL_OPERATOR_NAME> -h localhost --dbname=local
  	(c) \dt
	(d) select * from ops_aggregate;

7. Start the webserver

   Start apache:
    (1) sudo service apache2 restart

   OR start flask:
    (2) cd /usr/local/ops-monitoring/local
    (3) python ./web_server.py

8. Invoke some example queries:
   If you use the sample data from the unit test script, these queries
   should work.  All of these URLs assume you're using flask with access
   from localhost.  If you're using apache, replace "127.0.0.1:5000"
   with the FQDN of your webserver in each example.

 Info queries:
 http://127.0.0.1:5000/info/aggregate/gpo-ig
 http://127.0.0.1:5000/info/node/instageni.gpolab.bbn.com_node_pc1
 http://127.0.0.1:5000/info/interface/instageni.gpolab.bbn.com_interface_pc1:eth0
 http://127.0.0.1:5000/info/sliver/instageni.gpolab.bbn.com_sliver_26947
 http://127.0.0.1:5000/info/slice/ch.geni.net_gpo-infra_slice_tuptyexclusive
 http://127.0.0.1:5000/info/authority/ch.geni.net
 http://127.0.0.1:5000/info/user/tupty
 http://127.0.0.1:5000/info/opsconfig/geni-prod

Data queries:
 http://127.0.0.1:5000/data/?q={"filters":{"eventType":["ctrl_net_rx_bytes","ctrl_net_tx_bytes"],"ts":{"gte":3},"obj":{"type":"interface","id":["instageni.gpolab.bbn.com_interface_pc1:eth0"]}}}

 http://127.0.0.1:5000/data/?q={"filters":{"eventType":["mem_used","cpu_util","disk_part_max_used"],"ts":{"gte":3},"obj":{"type":"node","id":["instageni.gpolab.bbn.com_node_pc1"]}}}
